version: '3.7'
services:
   
  db:
    image: mysql:8.0.17
    command: --default-authentication-plugin=mysql_native_password # plugin autentykacyjny wstecznie kompatybilny ze starszymi klientami
    ports:
      - 3306:3306
    restart: 'no'
    environment:
      MYSQL_ROOT_PASSWORD: qwerty123
      MYSQL_DATABASE: webapp
      MYSQL_USER: cto
      MYSQL_PASSWORD: qwerty

  webapp1:
    image: nginx:1.17.3-alpine
    # container_name: webapp_container_1 # nie można na sztywno ustalać nazwy kontenera 
    volumes:
      - ./webapp/:/app/
      - ./vhosts/:/etc/nginx/conf.d/
    # usunięcie ports
    working_dir: /app/
    environment:
      VIRTUAL_HOST: https://webapp.development,http://webapp.development  # dodane, pamiętać aby dodać do /etc/hosts oraz w konfiguracji nginx
    depends_on:
      - webapp-php
    restart: 'no' 

  webapp2:
    image: nginx:1.17.3-alpine
    volumes:
      - ./webapp/:/app/
      - ./vhosts/:/etc/nginx/conf.d/
    working_dir: /app/
    # usunięcie ports
    environment:
      VIRTUAL_HOST: https://webapp.development,http://webapp.development # dodane
    depends_on:
      - webapp-php
    restart: 'no' 

  webapp-php:
    image: php:7.2-fpm-alpine
    working_dir: /app/
    volumes:
      - ./webapp/:/app/
    environment:
      APP_ENV: development
    depends_on:
      - db
    restart: 'no'

  balancer:
    image: dockercloud/haproxy:1.6.7
    ports:
      - 80:80
      - 443:443
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - webapp1
    environment:
      - ADDITIONAL_SERVICES=system-architecture:webapp1,system-architecture:webapp2 # dla wersji docker compose powyżej v2
